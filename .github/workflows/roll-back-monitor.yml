name: roll-back-monitor pipeline
on: 
  workflow_dispatch:
    inputs:
      image_name: 
        description: docker_image to create 
        required: true
      user_name: 
        description: user_name for naming container
        required: true
      HOST:
        description: ip of instance to login
        required: true
jobs:
  # first_job: 
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: copying code 
  #       uses: actions/checkout@v4
  #     - name: source copying files
  #       uses: appleboy/scp-action@v1
  #       with:
  #         host: ${{ inputs.HOST }}
  #         username:  ${{ secrets.USERNAME }}
  #         key: ${{ secrets.KEY }}
  #         source: .
  #         target: /home/ubuntu/
  # setup-job:
  #   runs-on: ubuntu-latest
  #   needs: first_job
  #   steps:
  #     - name: Exec cmd on remote server
  #       uses: appleboy/ssh-action@v1
  #       with:
  #         host: ${{ inputs.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         key: ${{ secrets.KEY }}
  #         script: |
  #           cd ~
  #           chmod +x docker-setup.sh
  #           ./docker-setup.sh
  login-job:
    runs-on: ubuntu-latest
    steps:
      - name: Rollback containers with simple monitoring
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ inputs.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          timeout: 1800s
          script: |
            cd ~
            
            docker stop ${{ inputs.user_name }} 2>/dev/null || true
            docker rm ${{ inputs.user_name }} 2>/dev/null || true
            docker image prune -a -f
            
            # # Kill existing node_exporter process
            # pkill -f node_exporter || true
            # sleep 2
            
            # # Clean up old files
            # rm -f prometheus.yml
            # rm -rf node_exporter-1.6.1.linux-amd64*
            
            # # Download and start node_exporter for system metrics
            # wget -q https://github.com/prometheus/node_exporter/releases/download/v1.6.1/node_exporter-1.6.1.linux-amd64.tar.gz
            # tar xf node_exporter-1.6.1.linux-amd64.tar.gz
            # nohup ./node_exporter-1.6.1.linux-amd64/node_exporter --web.listen-address=":9100" > /dev/null 2>&1 &
            
            # # Create simple Prometheus config
            # cat > prometheus.yml << 'EOF'
            # global:
            #   scrape_interval: 15s
            
            # scrape_configs:
            #   - job_name: 'prometheus'
            #     static_configs:
            #       - targets: ['localhost:9090']
              
            #   - job_name: 'system'
            #     static_configs:
            #       - targets: ['${{ inputs.HOST }}:9100']
              
            #   - job_name: 'application'
            #     static_configs:
            #       - targets: ['${{ inputs.HOST }}:80']
            #     metrics_path: '/metrics'
            # EOF
            docker run -dp 80:80 --name ${{ inputs.user_name }} ${{ inputs.image_name }}
            # docker run -d -p 9090:9090 --name prometheus \
            #   -v $(pwd)/prometheus.yml:/etc/prometheus/prometheus.yml \
            #   prom/prometheus
            # docker run -d -p 3000:3000 --name grafana grafana/grafana
